{
  "extends": "./tsconfig-checks.json",
  "include": ["src/**/*"],                               /* .ts, .tsx, and .d.ts file extension by default, with .js and .jsx if allowJs is set to true */
  "exclude": ["node_modules", "public", "**/__tests__", "**/*.test.ts"],

  "compilerOptions": {
    /* LANGUAGE AND ENVIRONMENT */
    "target": "ESNext",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    // "lib": ["ESNext", "DOM"],                         /* Specify a set of bundled library declaration files that describe the target runtime environment. */
    "jsx": "react",                                      /* Controls how JSX constructs are emitted in JavaScript files. This only affects output of JS files that started in .tsx files. */
    // "experimentalDecorators": true,                   /* Enables experimental support for decorators, which is a version of decorators that predates the TC39 standardization process. */

    /* MODULES */
    "module": "ESNext",                                  /* Specify what module code is generated. */
    "moduleResolution": "Node",                          /* Specify how TypeScript looks up a file from a given module specifier. */
    "baseUrl": "src",                                    /* Specify the base directory to resolve non-relative module names. */
    "rootDir": "src",                                    /* Specify the root folder within your source files. */
    // "typeRoots": ["./node_modules/@types"],           /* By default, all visible '@types' packages are included in your compilation. Packages in node_modules/@types of any enclosing folder are considered visible. */
    "resolveJsonModule": true,                           /* Enable importing .json files. */

    /* JAVASCRIPT SUPPORT */
    "allowJs": false,                                    /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */

    /* EMIT */
    "noEmit": false,                                     /* Disable emitting files from a compilation. */
    // "outDir": "lib",                                  /* Specify an output folder for all emitted files. */
    // "sourceMap": true,                                /* Create source map files for emitted JavaScript files. */,
    "emitDeclarationOnly": true,                         /* Only output d.ts files and not JavaScript files. */
    "declarationDir": "lib/types",                       /* Specify the output directory for generated declaration files. */
    "declaration": true,                                 /* Generate .d.ts files from TypeScript and JavaScript files in your project. */
    "declarationMap": true,                              /* Create sourcemaps for d.ts files. */
    "removeComments": false,                             /* Disable emitting comments. */
    "preserveConstEnums": true,                          /* Do not erase const enum declarations in generated code. */
    "downlevelIteration": false,                         /* Emit more compliant, but verbose and less performant JavaScript for iteration. */
    "newLine": "lf",                                     /* Specify the end of line sequence to be used when emitting files: ‘CRLF’ (dos) or ‘LF’ (unix). */

    /* INTEROP CONSTRAINTS */
    "allowSyntheticDefaultImports": true,                /* Allow 'import x from y' when a module doesn't have a default export. */
    "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */
    "isolatedModules": true,                             /* Ensure that each file can be safely transpiled without relying on other imports. */

    /* COMPLETENESS */
    "skipLibCheck": true                                 /* Skip type checking all .d.ts files. */
  }
}
